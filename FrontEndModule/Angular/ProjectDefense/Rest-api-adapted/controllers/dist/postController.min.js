"use strict";function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var s=[],o=!0,r=!1,n=void 0;try{for(var d,a=e[Symbol.iterator]();!(o=(d=a.next()).done)&&(s.push(d.value),!t||s.length!==t);o=!0);}catch(e){r=!0,n=e}finally{try{o||null==a.return||a.return()}finally{if(r)throw n}}return s}}function _arrayWithHoles(e){if(Array.isArray(e))return e}var _require=require("../models"),userModel=_require.userModel,themeModel=_require.themeModel,postModel=_require.postModel;function newPost(e,t,s){return postModel.create({text:e,userId:t,themeId:s}).then(function(e){return Promise.all([userModel.updateOne({_id:t},{$push:{posts:e._id},$addToSet:{themes:s}}),themeModel.findByIdAndUpdate({_id:s},{$push:{posts:e._id},$addToSet:{subscribers:t}},{new:!0})])})}function getLatestsPosts(e,t,s){var o=Number(e.query.limit)||0;postModel.find().sort({created_at:-1}).limit(o).populate("themeId userId").then(function(e){t.status(200).json(e)}).catch(s)}function createPost(e,o,t){var s=e.params.themeId,r=e.user._id;newPost(e.body.postText,r,s).then(function(e){var t=_slicedToArray(e,2),s=(t[0],t[1]);return o.status(200).json(s)}).catch(t)}function editPost(e,t,s){var o=e.params.postId,r=e.body.postText,n=e.user._id;postModel.findOneAndUpdate({_id:o,userId:n},{text:r},{new:!0}).then(function(e){e?t.status(200).json(e):t.status(401).json({message:"Not allowed!"})}).catch(s)}function deletePost(e,o,t){var s=e.params,r=s.postId,n=s.themeId,d=e.user._id;Promise.all([postModel.findOneAndDelete({_id:r,userId:d}),userModel.findOneAndUpdate({_id:d},{$pull:{posts:r}}),themeModel.findOneAndUpdate({_id:n},{$pull:{posts:r}})]).then(function(e){var t=_slicedToArray(e,3),s=t[0];t[1],t[2];s?o.status(200).json(s):o.status(401).json({message:"Not allowed!"})}).catch(t)}function like(e,t,s){var o=e.params.postId,r=e.user._id;console.log("like"),postModel.updateOne({_id:o},{$addToSet:{likes:r}},{new:!0}).then(function(){return t.status(200).json({message:"Liked successful!"})}).catch(s)}module.exports={getLatestsPosts:getLatestsPosts,newPost:newPost,createPost:createPost,editPost:editPost,deletePost:deletePost,like:like};
//# sourceMappingURL=postController.min.js.map
