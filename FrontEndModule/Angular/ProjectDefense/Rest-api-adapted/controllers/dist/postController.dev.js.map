{"version":3,"sources":["postController.js"],"names":["require","userModel","themeModel","postModel","newPost","text","userId","themeId","create","then","post","Promise","all","updateOne","_id","$push","posts","$addToSet","themes","findByIdAndUpdate","subscribers","getLatestsPosts","req","res","next","limit","Number","query","find","sort","created_at","populate","status","json","createPost","params","user","postText","body","_","updatedTheme","editPost","postId","findOneAndUpdate","updatedPost","message","deletePost","findOneAndDelete","$pull","deletedOne","__","like","console","log","likes","module","exports"],"mappings":";;;;;;;;;;eAA6CA,OAAO,CAAC,WAAD,C;IAA5CC,S,YAAAA,S;IAAWC,U,YAAAA,U;IAAYC,S,YAAAA,S;;AAE/B,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,OAA/B,EAAwC;AACpC,SAAOJ,SAAS,CAACK,MAAV,CAAiB;AAAEH,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,MAAM,EAANA,MAAR;AAAgBC,IAAAA,OAAO,EAAPA;AAAhB,GAAjB,EACFE,IADE,CACG,UAAAC,IAAI,EAAI;AACV,WAAOC,OAAO,CAACC,GAAR,CAAY,CACfX,SAAS,CAACY,SAAV,CAAoB;AAAEC,MAAAA,GAAG,EAAER;AAAP,KAApB,EAAqC;AAAES,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEN,IAAI,CAACI;AAAd,OAAT;AAA8BG,MAAAA,SAAS,EAAE;AAAEC,QAAAA,MAAM,EAAEX;AAAV;AAAzC,KAArC,CADe,EAEfL,UAAU,CAACiB,iBAAX,CAA6B;AAAEL,MAAAA,GAAG,EAAEP;AAAP,KAA7B,EAA+C;AAAEQ,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAEN,IAAI,CAACI;AAAd,OAAT;AAA8BG,MAAAA,SAAS,EAAE;AAAEG,QAAAA,WAAW,EAAEd;AAAf;AAAzC,KAA/C,EAAmH;AAAE,aAAK;AAAP,KAAnH,CAFe,CAAZ,CAAP;AAIH,GANE,CAAP;AAOH;;AAED,SAASe,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACrC,MAAMC,KAAK,GAAGC,MAAM,CAACJ,GAAG,CAACK,KAAJ,CAAUF,KAAX,CAAN,IAA2B,CAAzC;AAEAtB,EAAAA,SAAS,CAACyB,IAAV,GACKC,IADL,CACU;AAAEC,IAAAA,UAAU,EAAE,CAAC;AAAf,GADV,EAEKL,KAFL,CAEWA,KAFX,EAGKM,QAHL,CAGc,gBAHd,EAIKtB,IAJL,CAIU,UAAAO,KAAK,EAAI;AACXO,IAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBjB,KAArB;AACH,GANL,WAOWQ,IAPX;AAQH;;AAED,SAASU,UAAT,CAAoBZ,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AAAA,MACxBjB,OADwB,GACZe,GAAG,CAACa,MADQ,CACxB5B,OADwB;AAAA,MAEnBD,MAFmB,GAERgB,GAAG,CAACc,IAFI,CAExBtB,GAFwB;AAAA,MAGxBuB,QAHwB,GAGXf,GAAG,CAACgB,IAHO,CAGxBD,QAHwB;AAKhCjC,EAAAA,OAAO,CAACiC,QAAD,EAAW/B,MAAX,EAAmBC,OAAnB,CAAP,CACKE,IADL,CACU;AAAA;AAAA,QAAE8B,CAAF;AAAA,QAAKC,YAAL;;AAAA,WAAuBjB,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBO,YAArB,CAAvB;AAAA,GADV,WAEWhB,IAFX;AAGH;;AAED,SAASiB,QAAT,CAAkBnB,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AAAA,MAEtBkB,MAFsB,GAEXpB,GAAG,CAACa,MAFO,CAEtBO,MAFsB;AAAA,MAGtBL,QAHsB,GAGTf,GAAG,CAACgB,IAHK,CAGtBD,QAHsB;AAAA,MAIjB/B,MAJiB,GAINgB,GAAG,CAACc,IAJE,CAItBtB,GAJsB,EAM9B;;AACAX,EAAAA,SAAS,CAACwC,gBAAV,CAA2B;AAAE7B,IAAAA,GAAG,EAAE4B,MAAP;AAAepC,IAAAA,MAAM,EAANA;AAAf,GAA3B,EAAmD;AAAED,IAAAA,IAAI,EAAEgC;AAAR,GAAnD,EAAuE;AAAE,WAAK;AAAP,GAAvE,EACK5B,IADL,CACU,UAAAmC,WAAW,EAAI;AACjB,QAAIA,WAAJ,EAAiB;AACbrB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBW,WAArB;AACH,KAFD,MAGK;AACDrB,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEY,QAAAA,OAAO;AAAT,OAArB;AACH;AACJ,GARL,WASWrB,IATX;AAUH;;AAED,SAASsB,UAAT,CAAoBxB,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AAAA,oBACJF,GAAG,CAACa,MADA;AAAA,MACxBO,MADwB,eACxBA,MADwB;AAAA,MAChBnC,OADgB,eAChBA,OADgB;AAAA,MAEnBD,MAFmB,GAERgB,GAAG,CAACc,IAFI,CAExBtB,GAFwB;AAIhCH,EAAAA,OAAO,CAACC,GAAR,CAAY,CACRT,SAAS,CAAC4C,gBAAV,CAA2B;AAAEjC,IAAAA,GAAG,EAAE4B,MAAP;AAAepC,IAAAA,MAAM,EAANA;AAAf,GAA3B,CADQ,EAERL,SAAS,CAAC0C,gBAAV,CAA2B;AAAE7B,IAAAA,GAAG,EAAER;AAAP,GAA3B,EAA4C;AAAE0C,IAAAA,KAAK,EAAE;AAAEhC,MAAAA,KAAK,EAAE0B;AAAT;AAAT,GAA5C,CAFQ,EAGRxC,UAAU,CAACyC,gBAAX,CAA4B;AAAE7B,IAAAA,GAAG,EAAEP;AAAP,GAA5B,EAA8C;AAAEyC,IAAAA,KAAK,EAAE;AAAEhC,MAAAA,KAAK,EAAE0B;AAAT;AAAT,GAA9C,CAHQ,CAAZ,EAKKjC,IALL,CAKU,iBAAyB;AAAA;AAAA,QAAvBwC,UAAuB;AAAA,QAAXV,CAAW;AAAA,QAARW,EAAQ;;AAC3B,QAAID,UAAJ,EAAgB;AACZ1B,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBgB,UAArB;AACH,KAFD,MAEO;AACH1B,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEY,QAAAA,OAAO;AAAT,OAArB;AACH;AACJ,GAXL,WAYWrB,IAZX;AAaH;;AAED,SAAS2B,IAAT,CAAc7B,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AAAA,MAClBkB,MADkB,GACPpB,GAAG,CAACa,MADG,CAClBO,MADkB;AAAA,MAEbpC,MAFa,GAEFgB,GAAG,CAACc,IAFF,CAElBtB,GAFkB;AAI1BsC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEAlD,EAAAA,SAAS,CAACU,SAAV,CAAoB;AAAEC,IAAAA,GAAG,EAAE4B;AAAP,GAApB,EAAqC;AAAEzB,IAAAA,SAAS,EAAE;AAAEqC,MAAAA,KAAK,EAAEhD;AAAT;AAAb,GAArC,EAAuE;AAAE,WAAK;AAAP,GAAvE,EACKG,IADL,CACU;AAAA,WAAMc,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEY,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAN;AAAA,GADV,WAEWrB,IAFX;AAGH;;AAED+B,MAAM,CAACC,OAAP,GAAiB;AACbnC,EAAAA,eAAe,EAAfA,eADa;AAEbjB,EAAAA,OAAO,EAAPA,OAFa;AAGb8B,EAAAA,UAAU,EAAVA,UAHa;AAIbO,EAAAA,QAAQ,EAARA,QAJa;AAKbK,EAAAA,UAAU,EAAVA,UALa;AAMbK,EAAAA,IAAI,EAAJA;AANa,CAAjB","sourcesContent":["const { userModel, themeModel, postModel } = require('../models');\r\n\r\nfunction newPost(text, userId, themeId) {\r\n    return postModel.create({ text, userId, themeId })\r\n        .then(post => {\r\n            return Promise.all([\r\n                userModel.updateOne({ _id: userId }, { $push: { posts: post._id }, $addToSet: { themes: themeId } }),\r\n                themeModel.findByIdAndUpdate({ _id: themeId }, { $push: { posts: post._id }, $addToSet: { subscribers: userId } }, { new: true })\r\n            ])\r\n        })\r\n}\r\n\r\nfunction getLatestsPosts(req, res, next) {\r\n    const limit = Number(req.query.limit) || 0;\r\n\r\n    postModel.find()\r\n        .sort({ created_at: -1 })\r\n        .limit(limit)\r\n        .populate('themeId userId')\r\n        .then(posts => {\r\n            res.status(200).json(posts)\r\n        })\r\n        .catch(next);\r\n}\r\n\r\nfunction createPost(req, res, next) {\r\n    const { themeId } = req.params;\r\n    const { _id: userId } = req.user;\r\n    const { postText } = req.body;\r\n\r\n    newPost(postText, userId, themeId)\r\n        .then(([_, updatedTheme]) => res.status(200).json(updatedTheme))\r\n        .catch(next);\r\n}\r\n\r\nfunction editPost(req, res, next) {\r\n\r\n    const { postId } = req.params;\r\n    const { postText } = req.body;\r\n    const { _id: userId } = req.user;\r\n\r\n    // if the userId is not the same as this one of the post, the post will not be updated\r\n    postModel.findOneAndUpdate({ _id: postId, userId}, { text: postText }, { new: true })\r\n        .then(updatedPost => {\r\n            if (updatedPost) {\r\n                res.status(200).json(updatedPost);\r\n            }\r\n            else {\r\n                res.status(401).json({ message: `Not allowed!` });\r\n            }\r\n        })\r\n        .catch(next);\r\n}\r\n\r\nfunction deletePost(req, res, next) {\r\n    const { postId, themeId } = req.params;\r\n    const { _id: userId } = req.user;\r\n\r\n    Promise.all([\r\n        postModel.findOneAndDelete({ _id: postId, userId }),\r\n        userModel.findOneAndUpdate({ _id: userId }, { $pull: { posts: postId } }),\r\n        themeModel.findOneAndUpdate({ _id: themeId }, { $pull: { posts: postId } }),\r\n    ])\r\n        .then(([deletedOne, _, __]) => {\r\n            if (deletedOne) {\r\n                res.status(200).json(deletedOne)\r\n            } else {\r\n                res.status(401).json({ message: `Not allowed!` });\r\n            }\r\n        })\r\n        .catch(next);\r\n}\r\n\r\nfunction like(req, res, next) {\r\n    const { postId } = req.params;\r\n    const { _id: userId } = req.user;\r\n\r\n    console.log('like')\r\n\r\n    postModel.updateOne({ _id: postId }, { $addToSet: { likes: userId } }, { new: true })\r\n        .then(() => res.status(200).json({ message: 'Liked successful!' }))\r\n        .catch(next)\r\n}\r\n\r\nmodule.exports = {\r\n    getLatestsPosts,\r\n    newPost,\r\n    createPost,\r\n    editPost,\r\n    deletePost,\r\n    like,\r\n}\r\n"],"file":"postController.dev.js"}