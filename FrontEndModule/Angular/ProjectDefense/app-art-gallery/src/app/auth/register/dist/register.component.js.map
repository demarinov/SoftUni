{"version":3,"sources":["register.component.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAkD;AAClD,wCAAiF;AAGjF,uCAA8D;AAO9D;IAmBE,2BAAoB,WAAwB,EAClC,WAAwB,EACxB,MAAc;QAFJ,gBAAW,GAAX,WAAW,CAAa;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAfxB,oBAAe,GAAG,IAAI,mBAAW,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAExF,sBAAiB,GAAc,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpD,UAAU,EAAE,IAAI,mBAAW,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACjF,OAAO,EAAE,IAAI,mBAAW,CAAC,IAAI,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,sBAAc,CAAC,CAAC;YACrE,WAAW,EAAE,IAAI,iBAAS,CAAC;gBACvB,UAAU,EAAE,IAAI,CAAC,eAAe;gBAChC,YAAY,EAAE,IAAI,mBAAW,CAAC,EAAE,EAAC,CAAC,qBAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;aAC1E,CAAC;YACF,KAAK,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAC1B,WAAW,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;SACjC,CAAC,CAAA;IAI0B,CAAC;IAnB7B,sBAAI,4CAAa;aAAjB;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,WAAW,CAAc,CAAC;QACnE,CAAC;;;OAAA;IAmBD,oCAAQ,GAAR;IACA,CAAC;IAED,0CAAc,GAAd;QAAA,iBAsBC;QArBG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAEpC,IAAA,iCAA2E,EAA1E,sBAAQ,EAAE,gBAAK,EAAE,wBAAS,EAAE,YAAG,EAAE,wBAAyC,CAAC;QAElF,IAAM,IAAI,GAAkB;YAC1B,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,SAAS,CAAC,QAAQ;SAG7B,CAAA;QAED,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,GAAG,CAAC;SAC/B;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC9C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAA;IACN,CAAC;IAhDU,iBAAiB;QAL7B,gBAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,2BAA2B;YACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;SACxC,CAAC;OACW,iBAAiB,CAkD7B;IAAD,wBAAC;CAlDD,AAkDC,IAAA;AAlDY,8CAAiB","file":"register.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CreateUserDto, UserService } from 'src/app/core/user.service';\nimport { emailValidator, passwordMatch } from 'src/app/utils';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  get passwordGroup() : FormGroup {\n    return this.registerFormGroup.controls['passwords'] as FormGroup;\n  }\n\n  passwordControl = new FormControl(null, [Validators.required, Validators.minLength(5)]);\n\n  registerFormGroup: FormGroup = this.formBuilder.group({\n    'username': new FormControl(null, [Validators.required, Validators.minLength(5)]),\n    'email': new FormControl(null, [Validators.required, emailValidator]),\n    'passwords': new FormGroup({\n        'password': this.passwordControl,\n        \"rePassword\": new FormControl('',[passwordMatch(this.passwordControl)]),\n    }),\n    'tel': new FormControl(''),\n    'telRegion': new FormControl('')\n  })\n\n  constructor(private formBuilder: FormBuilder, \n    private userService: UserService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  handleRegister() {\n      console.log(this.registerFormGroup.value);\n\n      const {username, email, passwords, tel, telRegion} = this.registerFormGroup.value;\n\n      const body: CreateUserDto = {\n        username: username,\n        email: email,\n        password: passwords.password,\n        // ...(!!tel && {tel: telRegion+tel})\n\n      }\n\n      if (tel) {\n        body['tel'] = telRegion + tel;\n      }\n\n      console.log(body);\n\n      this.userService.register$(body).subscribe((data) => {\n        this.router.navigate(['/home']);\n      })\n  }\n\n}\n"]}