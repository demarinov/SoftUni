{"version":3,"sources":["login.component.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAAkD;AAClD,wCAAiF;AAGjF,uCAA0E;AAO1E;IASE,wBACU,WAAwB,EACxB,WAAwB,EACxB,MAAa;QAFb,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAO;QAVvB,mBAAc,GAAc,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/C,OAAO,EAAE,IAAI,mBAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,sBAAc,CAAC,CAAC;YACnE,UAAU,EAAG,IAAI,mBAAW,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SACnF,CAAC,CAAC;IAOwB,CAAC;IAE5B,iCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,qCAAY,GAAZ;QACE,4BAA4B;QAC5B,mCAAmC;IAErC,CAAC;IAED,oCAAW,GAAX;QAAA,iBAiBC;QAhBC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAEjC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YAC3D,IAAI,EAAE,UAAA,IAAI;gBACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAClC,CAAC;YACD,QAAQ,EAAE;gBACR,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1B,CAAC;YACD,KAAK,EAAE,UAAC,KAAK;gBACX,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACrB,KAAI,CAAC,YAAY,GAAG,iCAAyB,CAAC;YAChD,CAAC;SACF,CAAC,CAAA;IACJ,CAAC;IAzCU,cAAc;QAL1B,gBAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,WAAW,EAAE,wBAAwB;YACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;SACrC,CAAC;OACW,cAAc,CA2C1B;IAAD,qBAAC;CA3CD,AA2CC,IAAA;AA3CY,wCAAc","file":"login.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth.service';\nimport { emailValidator, SERVICE_UNAVAILABLE_ERROR } from 'src/app/utils';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginFormGroup: FormGroup = this.formBuilder.group({\n      'email': new FormControl('', [Validators.required, emailValidator]),\n      'password' : new FormControl('', [Validators.required, Validators.minLength(5)])\n  }); \n\n  errorMessage!: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router:Router) { }\n\n  ngOnInit(): void {\n    this.loginHandler();\n  }\n\n  loginHandler() {\n    // this.userService.login();\n    // this.router.navigate(['/home']);\n\n  }\n\n  handleLogin() {\n    console.log('form is submitted');\n\n    this.errorMessage = '';\n    this.authService.login$(this.loginFormGroup.value).subscribe({\n      next: user => {\n        console.log(user);\n        this.router.navigate(['/home']);\n      },\n      complete: () => {\n        console.log('complete');\n      },\n      error: (error) => {\n        console.error(error);\n        this.errorMessage = SERVICE_UNAVAILABLE_ERROR;\n      } \n    })\n  }\n\n}\n"]}