{"version":3,"sources":["login.component.ts"],"names":["core_1","require","forms_1","utils_1","LoginComponent","formBuilder","authService","router","this","loginFormGroup","group","email","FormControl","Validators","required","emailValidator","password","minLength","prototype","ngOnInit","loginHandler","handleLogin","_this","console","log","errorMessage","login$","value","subscribe","next","user","navigate","complete","error","status","message","SERVICE_ERROR","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBACAC,QAAAD,QAAA,kBAGAE,QAAAF,QAAA,iBAOAG,eAAA,WASE,SAAAA,EACUC,EACAC,EACAC,GAFAC,KAAAH,YAAAA,EACAG,KAAAF,YAAAA,EACAE,KAAAD,OAAAA,EAVVC,KAAAC,eAA4BD,KAAKH,YAAYK,MAAM,CAC/CC,MAAS,IAAIT,QAAAU,YAAY,GAAI,CAACV,QAAAW,WAAWC,SAAUX,QAAAY,iBACnDC,SAAa,IAAId,QAAAU,YAAY,GAAI,CAACV,QAAAW,WAAWC,SAAUZ,QAAAW,WAAWI,UAAU,OA2ClF,OAjCEb,EAAAc,UAAAC,SAAA,WACEX,KAAKY,gBAGPhB,EAAAc,UAAAE,aAAA,aAMAhB,EAAAc,UAAAG,YAAA,WAAA,IAAAC,EAAAd,KACEe,QAAQC,IAAI,qBAEZhB,KAAKiB,aAAe,GACpBjB,KAAKF,YAAYoB,OAAOlB,KAAKC,eAAekB,OAAOC,UAAU,CAC3DC,KAAM,SAAAC,GACJP,QAAQC,IAAIM,GACZR,EAAKf,OAAOwB,SAAS,CAAC,WAExBC,SAAU,WACRT,QAAQC,IAAI,aAEdS,MAAO,SAACA,GACNV,QAAQU,MAAMA,GACM,KAAhBA,EAAMC,QAAiBD,EAAMC,QAAU,IACzCZ,EAAKG,aAAeQ,EAAMA,MAAME,QAEhCb,EAAKG,aAAetB,QAAAiC,kBAzCjBhC,EAAciC,WAAA,CAL1BrC,OAAAsC,UAAU,CACTC,SAAU,YACVC,YAAa,yBACbC,UAAW,CAAC,4BAEDrC,GAAb,GAAasC,QAAAtC,eAAAA","file":"login.component.min.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/auth.service';\nimport { emailValidator, SERVICE_ERROR } from 'src/app/utils';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginFormGroup: FormGroup = this.formBuilder.group({\n      'email': new FormControl('', [Validators.required, emailValidator]),\n      'password' : new FormControl('', [Validators.required, Validators.minLength(5)])\n  }); \n\n  errorMessage!: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router:Router) { }\n\n  ngOnInit(): void {\n    this.loginHandler();\n  }\n\n  loginHandler() {\n    // this.userService.login();\n    // this.router.navigate(['/home']);\n\n  }\n\n  handleLogin() {\n    console.log('form is submitted');\n\n    this.errorMessage = '';\n    this.authService.login$(this.loginFormGroup.value).subscribe({\n      next: user => {\n        console.log(user);\n        this.router.navigate(['/home']);\n      },\n      complete: () => {\n        console.log('complete');\n      },\n      error: (error) => {\n        console.error(error);\n        if (error.status >= 400 && error.status <= 499) {\n          this.errorMessage = error.error.message;\n        } else {\n          this.errorMessage = SERVICE_ERROR;\n        }\n      } \n    })\n  }\n\n}\n"]}