{"version":3,"sources":["auth.interceptor.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAC3C,6CAM8B;AAC9B,6BAAuC;AAKvC;IAEE,yBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,mCAAS,GAAT,UAAU,OAA6B,EAAE,IAAiB;QAA1D,iBAcC;QAZC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAEhC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAG,CAAC,UAAA,QAAQ;YACzC,IAAI,QAAQ,YAAY,mBAAY,EAAE;gBAClC,IAAI,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;oBACvE,IAAM,eAAe,GAAU,QAAQ,CAAC,IAAa,CAAC;oBACtD,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;iBAC/C;qBAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAC1C,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;iBAC1C;aACJ;QACL,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAlBU,eAAe;QAD3B,iBAAU,EAAE;OACA,eAAe,CAmB3B;IAAD,sBAAC;CAnBD,AAmBC,IAAA;AAnBY,0CAAe","file":"auth.interceptor.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse\n} from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport { IUser } from '../interfaces';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    console.log('auth interceptor');\n    \n    return next.handle(request).pipe(tap(response => {\n        if (response instanceof HttpResponse) {\n            if (response.url.endsWith(\"login\") || response.url.endsWith(\"register\")) {\n              const newlyLoggedUser: IUser = response.body as IUser;\n              this.authService.handleLogin(newlyLoggedUser);\n            } else if (response.url.endsWith(\"logout\")) {\n              this.authService.handleLogout(undefined);\n            } \n        }\n    }));\n  }\n}\n"]}