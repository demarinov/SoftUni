{"version":3,"sources":["auth.guard.ts"],"names":["core_1","require","rxjs_1","AuthGuard","authService","router","this","prototype","canActivate","route","state","_this","isLoggedIn$","pipe","take","map","loggedIn","createUrlTree","__decorate","Injectable","providedIn","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAEAC,OAAAD,QAAA,QAOAE,UAAA,WAEE,SAAAA,EAAoBC,EAAkCC,GAAlCC,KAAAF,YAAAA,EAAkCE,KAAAD,OAAAA,EAiBxD,OAhBEF,EAAAI,UAAAC,YAAA,SACEC,EACAC,GAFF,IAAAC,EAAAL,KAIE,OAAOA,KAAKF,YAAYQ,YAAYC,KAAKX,OAAAY,KAAK,GAAIZ,OAAAa,IAAI,SAAAC,GAElD,QAAIA,GAIGL,EAAKN,OAAOY,cAAc,CAAC,oBAb7Bd,EAASe,WAAA,CAHrBlB,OAAAmB,WAAW,CACVC,WAAY,UAEDjB,GAAb,GAAakB,QAAAlB,UAAAA","file":"auth.guard.min.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { map, Observable, take } from 'rxjs';\nimport { AuthService } from '../auth.service';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router:Router){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.authService.isLoggedIn$.pipe(take(1), map(loggedIn => {\n\n        if (loggedIn) {\n          return true;\n        }\n\n        return this.router.createUrlTree(['/user/login']);\n    }))\n\n    \n  }\n  \n}\n"]}