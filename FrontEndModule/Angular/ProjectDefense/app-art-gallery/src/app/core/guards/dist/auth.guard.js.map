{"version":3,"sources":["auth.guard.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA2C;AAE3C,6BAA6C;AAO7C;IAEE,mBAAoB,WAAwB,EAAU,MAAa;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAO;IAAE,CAAC;IACtE,+BAAW,GAAX,UACE,KAA6B,EAC7B,KAA0B;QAF5B,iBAcC;QAVC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAI,CAAC,CAAC,CAAC,EAAE,UAAG,CAAC,UAAA,QAAQ;YAE1D,IAAI,QAAQ,EAAE;gBACZ,OAAO,IAAI,CAAC;aACb;YAED,OAAO,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC,CAAA;IAGL,CAAC;IAjBU,SAAS;QAHrB,iBAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,SAAS,CAmBrB;IAAD,gBAAC;CAnBD,AAmBC,IAAA;AAnBY,8BAAS","file":"auth.guard.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { map, Observable, take } from 'rxjs';\nimport { AuthService } from '../auth.service';\nimport { UserService } from '../user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router:Router){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    return this.authService.isLoggedIn$.pipe(take(1), map(loggedIn => {\n\n        if (loggedIn) {\n          return true;\n        }\n\n        return this.router.createUrlTree(['/user/login']);\n    }))\n\n    \n  }\n  \n}\n"]}